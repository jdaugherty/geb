buildscript {
    repositories {
        maven { url = 'https://repo.grails.org/grails/core' }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
    }
}

plugins {
    id 'com.github.ben-manes.versions' version '0.51.0'
}

version = projectVersion
group = 'org.grails.plugins'

apply plugin: 'java-library'
apply plugin: 'java-test-fixtures'
apply plugin: 'org.grails.grails-plugin'
apply plugin: 'org.grails.internal.grails-plugin-publish'
apply plugin: 'maven-publish'

repositories {
    maven { url = 'https://repo.grails.org/grails/core' }
}

configurations.register('documentation')

ext.set('selenium.version', seleniumVersion) // Override selenium version from spring-boot-dependencies

dependencies {

    compileOnly "org.grails:grails-core:$grailsVersion" // Provided, as this is a Grails plugin

    testFixturesApi "org.gebish:geb-spock:$gebVersion", {
        exclude group: 'org.codehaus.groovy', module: 'groovy' // Provided by Grails
    }
    testFixturesApi "org.grails:grails-testing-support:$grailsTestingSupportVersion"
    testFixturesApi "org.grails:grails-datastore-gorm:$gormVersion"
    testFixturesApi "org.testcontainers:selenium:$testcontainersVersion"
    testFixturesApi "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    testFixturesApi "org.seleniumhq.selenium:selenium-remote-driver:$seleniumVersion"

    testFixturesImplementation "org.seleniumhq.selenium:selenium-support:$seleniumVersion"

    testFixturesCompileOnly "org.slf4j:slf4j-nop:$slf4jVersion" // Remove warning about missing slf4j binding during compilation

    documentation "org.codehaus.groovy:groovy:$GroovySystem.version"
    documentation "org.codehaus.groovy:groovy-ant:$GroovySystem.version"
    documentation "org.codehaus.groovy:groovy-templates:$GroovySystem.version"
    documentation "org.codehaus.groovy:groovy-xml:$GroovySystem.version"
    documentation "com.github.javaparser:javaparser-core:$javaparserVersion"
}


grailsPublish {
    userOrg = 'grails'
    githubSlug = 'grails/geb'
    license {
        name = 'Apache-2.0'
    }
    title = 'Grails Geb Plugin'
    desc = 'Provides Integration with Geb for Functional Testing'
    developers = [
        graemerocher: 'Graeme Rocher',
        puneetbehl: 'Puneet Behl',
        sbglasius: 'SÃ¸ren Berg Glasius',
        matrei: 'Mattias Reichel',
        jdaugherty: 'James Daugherty'
    ]
}

tasks.withType(Groovydoc).configureEach {
    destinationDir = layout.buildDirectory.dir('docs/api').get().asFile
    docTitle = "Grails Geb Plugin ${version}"
    classpath = configurations.documentation
    source = files(source, sourceSets.testFixtures.allSource)
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    testLogging {
        events 'passed', 'skipped', 'failed'
        showExceptions true
        exceptionFormat 'full'
        showCauses true
        showStackTraces true
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
}

tasks.named('bootRun') { enabled = false }
tasks.named('findMainClass') { enabled = false }